*{
    margin: 0;
    padding: 0;
}

:root {
    font-family: Inter, sans-serif;
    font-feature-settings: 'liga' 1, 'calt' 1; /* fix for Chrome */
  }
  @supports (font-variation-settings: normal) {
    :root { font-family: InterVariable, sans-serif; }
  }

img{
    width: 40px;
}



.grid-container{
    display: grid;
    grid-template-rows: 150px 600px;
    

}


header{
    margin: 20px;
    padding: 30px;
    grid-row-start:1 ;
    grid-row-end: 2;
    background-color: #f5efef;
    border-radius: 70px;
    height: 30px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    
    

}
/* header style here  */
#logo{
    
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
}

#add-button{
    display: flex;
    justify-content: center;
    align-items: center;
 }

 #button-text{
    font-size: 32px;
    font-family: InterVariable, sans-serif;
    font-weight: lighter;

 }

#logo-text{
    font-size: 32px;
    font-family: InterVariable, sans-serif;
    font-weight: bold;
}

#get-started-text{
    border: 1px solid #9dd993;
    padding: 20px;
    border-radius: 70px;
    background-color: #9dd993;
    color: #eff2e9;

}

/* the library is the section that will continue the books  */
#library{
    padding: 10px;
    grid-row-start:2 ;
    grid-row-end: -1;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 0.2fr));
    gap: 40px;
}

/* book card style  */
.book-card{
    border: 1px solid ;
    border-radius: 10px;
    width: 250px;
    height: 300px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
    background-color: #f5efef;
    box-shadow: 10px 10px  ;

}
#delete-card{
    width: 240px;
    margin-top: 4px;
    display: flex;
    justify-content: end;
    align-items: start;
    align-self: e;
}

#book-info{
    
    width: 230px;
    height: 150px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}
h3{
    font-size: 28px;
    font-family: InterVariable, sans-serif;

}

#author-section{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 20px;
    font-family: InterVariable, sans-serif;
    color: #5c5252;
    
}

h5{
    color: #787373;
}


#dialog{
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    transform: translate(-50%, -50%);
    width: 300px;
    height: 330px;
    border-radius: 20px;
    border: 1px solid #9dd993;
    
}

form{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 10px;
    
    padding: 5px;
    height: 250px;
}

#first-section{
   
    width: 270px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    
}

/* styling the close dialog button */

#close-dialog{
    background-color: white;
    border: none;
}

#second-section{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 15px;
}

input{
    width: 230px;
    border-radius: 20px;
    padding: 10px;
}
/* style for the check box    */
.checkbox-wrapper input[type="checkbox"] {
    visibility: hidden;
    display: none;
  }
  
  .checkbox-wrapper *,
    .checkbox-wrapper ::after,
    .checkbox-wrapper ::before {
    box-sizing: border-box;
    user-select: none;
  }
  
  .checkbox-wrapper {
    position: relative;
    display: block;
    overflow: hidden;
  }
  
  .checkbox-wrapper .label {
    cursor: pointer;
  }
  
  .checkbox-wrapper .check {
    width: 50px;
    height: 50px;
    position: absolute;
    opacity: 0;
  }
  
  .checkbox-wrapper .label svg {
    vertical-align: middle;
  }
  
  .checkbox-wrapper .path1 {
    stroke-dasharray: 400;
    stroke-dashoffset: 400;
    transition: .5s stroke-dashoffset;
    opacity: 0;
  }
  
  .checkbox-wrapper .check:checked + label svg g path {
    stroke-dashoffset: 0;
    opacity: 1;
  }

/* end check box style */

  #add-button{
    width: 250px;
    padding: 10px;
    border: 1px solid #9dd993;
    border-radius: 70px;
    background-color: #9dd993;
    color: #eff2e9;
    font-weight: 700;
  }

  #remove-book{
    background-color: #f5efef;
    border: none;
  }

  /*  read or not check box in book-card */
  .container {
    --UnChacked-color: hsl(0, 0%, 10%);
    --chacked-color: #9dd993;
    --font-color: white;
    --chacked-font-color: var(--font-color);
    --icon-size: 0.5em;
    --anim-time: 0.2s;
    --anim-scale: 0.1;
    --base-radius: 0.8em;
  }
  
  .container {
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
    fill: var(--font-color);
    color: var(--font-color);
  }
  
  /* Hide the default checkbox */
  .container input {
    display: none;
  }
  
  /* Base custom checkbox */
  .checkmark {
    background: var(--UnChacked-color);
    border-radius: var(--base-radius);
  
    display: flex;
    padding: 0.5em;
  }
  .icon {
    width: var(--icon-size);
    height: auto;
    filter: drop-shadow(0px 2px var(--base-radius) rgba(0, 0, 0, 0.25));
  }
  .name {
    margin: 0 0.25em;
  }
  .Yes {
    width: 0;
  }
  .name.Yes {
    display: none;
  }
  
  /* action custom checkbox */
  .container:hover .checkmark,
  .container:hover .icon,
  .container:hover .name {
    transform: scale(calc(1 + var(--anim-scale)));
  }
  
  .container:active .checkmark,
  .container:active .icon,
  .container:active .name {
    transform: scale(calc(1 - var(--anim-scale) / 2));
    border-radius: calc(var(--base-radius) * 2);
  }
  .checkmark::before {
    content: "";
    opacity: 0.5;
    transform: scale(1);
    border-radius: var(--base-radius);
    position: absolute;
    box-sizing: border-box;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
  }
  .checkmark:hover:before {
    background-color: hsla(0, 0%, 50%, 0.2);
  }
  .container input:checked + .checkmark:before {
    animation: boon calc(var(--anim-time)) ease;
    animation-delay: calc(var(--anim-time) / 2);
  }
  
  /* When the checkbox is checked*/
  .container input:checked + .checkmark {
    --UnChacked-color: var(--chacked-color);
    fill: var(--chacked-font-color);
    color: var(--chacked-font-color);
  }
  
  .container input:checked ~ .checkmark .No {
    width: 0;
  }
  .container input:checked ~ .checkmark .name.No {
    display: none;
  }
  
  .container input:checked ~ .checkmark .Yes {
    width: var(--icon-size);
  }
  .container input:checked ~ .checkmark .name.Yes {
    width: auto;
    display: unset;
  }
  
  /*Animation*/
  .container,
  .checkmark,
  .checkmark:after,
  .icon,
  .checkmark .name {
    transition: all var(--anim-time);
  }
  
 